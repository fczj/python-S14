define('modules/shop/detail/sale_analysis/unsale/module.shop.detail.unsale', function(require, exports, module) {

  /**
  	@author xukang
  */
  ;(function($,RC){
  	var Shop        = RC.controls.get('control.shop.model'),
  		querystring = RC.controls.get('control.querystring');
  
  	var mdul = {
  		name: 'shop.detail.unsale',
  		depend: 'shop',
  		_elem_root: '#main',
  		_elem_template_name: 'template.shop.detail.unsale',
  		_elem_template_unsale_content: 'template.shop.detail.unsale_content',
  		_fn_dom_render: function(data){
  			if(this.$el){
  				return;
  			}
  			this.$el = $(RC.template.get(this._elem_template_name, data)).appendTo(this._elem_root);
  			this.$el.find(".J_panel_unsale").html($(RC.template.get(this._elem_template_unsale_content, data)));
  			this._fn_event_bind();
  		},
  		init: function(){},
  		_fn_event_bind:function(){
  			this.$el.off('change', '.J_panel_unsale .pageSize');
  			this.$el.on('change', '.J_panel_unsale .pageSize', $.proxy(function(e){
  				RC.pages.modifyCurHash({pageSize: $(e.currentTarget).val(),pageNo:1});
  			}, this));
  		},
  		getContainer: function(){
  			return this.$el;
  		},
  		_maxDate :undefined,
  		_minDate:undefined,
  		disabled: function(){
  			this._status_module_active = false;
  		},
  		_fn_dom_update_list:function(hashs,data){
  			var renderData = {};
  			renderData.loading=2;
  			renderData.level = data.__level;
  			renderData.status = data.__status;
  			renderData.shopId = hashs.id;
  			renderData.hashs_pageSize = hashs.pageSize;
  			renderData.status_html = data.__status_html;
  			if(!data.data || !data.data.list || data.data.list.length==0){
  				renderData.have_data=1;
  			}else{
  				renderData.have_data=2;
  				renderData.list = data.data.list;
  				$(data.data.list).each(function(index,item){
  					item.viewId = (hashs.pageNo-1)*hashs.pageSize+1+index+'';
  				});
  			}
  			this.$el.find(".J_panel_unsale").html($(RC.template.get(this._elem_template_unsale_content, renderData)));
  			if(renderData.have_data==2){
  				this._fn_render_page_dom(hashs,data.data.total);
  			}
  		},
  		_fn_render_page_dom:function(hashs,total){
              //以下渲染分页
              var pages = this.$el.find('.J_Pages_Container');
              if(pages && pages.length){
                  var pagesHtml = RC.controls.get('controls.shop.pagination').getHtml({
                      lk: function(pageNo){
                          hashs.pageNo = pageNo;
                          return '#/shop/detail/unsale/?'+ querystring.stringify(hashs);
                      },
                      pageSize: hashs.pageSize -0,
                      pageNo: hashs.pageNo - 0,
                      maxNo: total,
                      hasTotal: true,
                      isEnd: true
                      // goPage: true,
                  });
                  // console.log('pagesHtml:'+pagesHtml.html());
                  pages.html(pagesHtml);
  				pages.find(".page_sure").off("click");
                  pages.find(".page_sure").on("click",function(e){
                  	var $target = $(e.target);
  	                var pageNo = $target.siblings('input').val();
  	                if (!$.isNumeric(pageNo) || +pageNo <= 0 || +pageNo > $target.data('maxPage')) {
  	                    RC.showWarn('请输入正确的页码');
  	                    e.preventDefault();
  	                    return;
  	                }
  	                RC.pages.modifyCurHash({pageNo:pageNo});
                  });
              }
          },
  		update: function(hashs, afterload, refresh){
  			// 实现 module.is_active
  			this._status_module_active = true;
  			hashs.pageNo = hashs.pageNo||1;
  			hashs.pageSize = hashs.pageSize||10;
  			// 参数是否和原先一致
  			if(this._status_shop_stauts_changed !== true && refresh != true && querystring.stringify(hashs) ===  querystring.stringify(this._status_hashs)){
  				afterload && afterload();
  				return;
  			}
  			this._fn_dom_render({loading:1});
  			// 加载店铺基本信息
  			var _this = this;
  			afterload && afterload();
  			Shop.getModel(hashs.id).getData(_.bind(function(data){
  				Shop.getModel(hashs.id).shop_sale_analysis_unsale({shopId:data.id,pageNo:hashs.pageNo,pageSize:hashs.pageSize},function(data){
  					_this._fn_dom_update_list(hashs,data);
  				},function(){
  
  				});
  			},this));
  		},
  		destroy: function(){
  			if(this.$el){
  				this.$el.empty().remove();
  				this.$el = null;
  			}
  		}
  	};
  
  	RC.modules.define(mdul.name, mdul);
  })(jQuery,RayCloud);
  

});
