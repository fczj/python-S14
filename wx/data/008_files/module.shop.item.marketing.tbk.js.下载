define('modules/shop/item/marketing/module.shop.item.marketing.tbk', function(require, exports, module) {

  /**
  	@author xukang
  */
  ;(function($,_,RC){
  	var querystring = RC.controls.get('control.querystring'),
  		ItemModel   = RC.controls.get('control.item.model');
  
  	var mdul = {
  		name: 'shop.item.marketing.tbk',
  		depend: 'shop',
  		_elem_root: '#main_marketing',
  		_elem_template_name: 'template.shop.item.marketing.tbk',
  		_fn_dom_render: function(data){
  			if(this.$el){
  				return;
  			}
  			this.$el = $(RC.template.get(this._elem_template_name, data || {})).appendTo(this._elem_root);
  			this._fn_event_bind();
  		},
  		_fn_dom_update_list: function(data, hashs, mixHashs){
  			// translate for template
  			data._stauts_view = 1;
  			data.list = data.list || [];
  			var dateUtil = RC.util.date;
  			_.each(data.list, function(item){
  				// translate
  				item.discount = item.discount?(item.discount*10).toFixed(1):'-';
  				item.date    = item.date ? dateUtil.getdate(item.date, 'MM-DD') : '-';
  				item.price   = item.price !== undefined ? item.price.toFixed(2) : '-';
  				item.price_  = item.price_ !== undefined ? item.price_.toFixed(2) : '-';
  				item.commFee = item.commFee !== undefined ? item.commFee.toFixed(2) : '-';
  				_.each({date: '-', price: '_', amount: '-', offer: '-', price_: '-', commFeeRate: '-', commFee: '-', promo: '-'}, function(value,key){
  					item[key] = item[key] !== undefined ? item[key] : value;
  				});
  			});
  			data._list_length = data.list.length;
  			// date
  			data._minDate          = mixHashs._minDate ? mixHashs._minDate.replace(/-/g,'/') : '';
  			data._maxDate          = mixHashs._maxDate ? mixHashs._maxDate.replace(/-/g,'/') : '';
  			data.hashs_startDate   = hashs.startDate;
  			data.hashs_endDate     = hashs.endDate;
  			data.hashs_startDate_  = hashs.startDate.replace(/-/g,'/');
  			data.hashs_endDate_    = hashs.endDate.replace(/-/g,'/');
  			data._hashs_startDate_ = dateUtil.tojsdate(hashs.startDate).getTime();
  			data._hashs_endDate_   = dateUtil.tojsdate(hashs.endDate).getTime();
  			data.hashs_pageNo     = hashs.pageNo;
  			data.hashs_pageSize   = hashs.pageSize;
  			data.hashs_shopId     = hashs.shopId;
  			data.hashs_itemId     = hashs.itemId;
  			data.sum_offer        = data.sum_offer || ' - ';
  			data.sum_amount       = data.sum_amount || ' - ';
  			data.sum_price        = data.sum_price || ' - ';
  			// render
  			// console.log("宝贝 淘宝客,返回数据:"+JSON.stringify(data));
  			//未知参数,店铺没有这个参数,先做1处理
  			data._stauts_view=1;
  			// data.__level = 'senior';
  			// data.__status=-1;
  			// data.box = 'detail';
  			this.$el.html(RC.template.get_node('if','_stauts_view',data,RC.template.get(this._elem_template_name),0));
  			data.status = data.__status;
  			// render pages
  			var pages = this.$el.find('.J_Pages');
  			if(pages && pages.length){
  				if(hashs.root){delete hashs.root;}
  				if(hashs.app){delete hashs.app;}
  				if(hashs.classification){delete hashs.classification;}
  				var pagesHtml = RC.controls.get('controls.shop.pagination').getHtml({
  					lk: function(pageNo){ 
  						hashs.pageNo = pageNo;
  						return '#/shop/item/marketing/?'+ querystring.stringify(hashs);
  					},
  					pageSize: hashs.pageSize -0,
  					pageNo: hashs.pageNo - 0,
  					maxNo: data.total,
  					hasTotal: true,
  					isEnd: true,
  					goPage: false
  				});
  				pages.html(pagesHtml);
  				// console.log("宝贝 淘宝客pagesHtml:+pagesHtml")
  			}
  		},
  		_fn_event_bind: function(){
  			this.$el.on('change', '.dateRangePicker', function(e){
  				var value = $.trim($(e.currentTarget).val()).split(/\s*-\s*/);
  				RC.pages.modifyCurHash({
  					startDate: value[0].replace(/\//g,'-'),
  					endDate  : value[1].replace(/\//g,'-'),
  					pageNo   : '1'
  				});
  			});
  			this.$el.on('change', '.pageSize', function(e){
  				RC.pages.modifyCurHash({
  					pageSize : $(e.currentTarget).val(),
  					pageNo   : '1'
  				});
  			});
  		},
  		_fn_event_unbind: function(){
  			this.$el.off('change', '.dateRangePicker');
  			this.$el.off('change', '.pageSize');
  		},
  		init: function(){},
  		getContainer: function(){return this.$el;},
  		disabled: function(){},
  		_status_hashs: {},
  		update: function(hashs, afterload, refresh, itemInfo){
  			// normalize hashs
  			var dateUtil   = RC.util.date,
  				updateTime = itemInfo.__updateTime,
  				minDate,
  				maxDate    = dateUtil.getdate(updateTime,'YY-MM-DD');
  			// 一个月以31天计算
  			switch(itemInfo.__level){
  				case 'senior': 
  					minDate = '2000-01-01';
  					break;
  				case 'primary': 
  					minDate = dateUtil.getdiffdate(maxDate, '-182d', 'YY-MM-DD');
  					break;
  				default:
  					minDate = dateUtil.getdiffdate(maxDate, '-30d', 'YY-MM-DD');
  			}
  			if(!hashs.startDate || !hashs.endDate || !dateUtil.is_date(hashs.startDate) || !dateUtil.is_date(hashs.endDate) || hashs.startDate - minDate < 0 || hashs.endDate - maxDate > 0){
  				hashs.startDate = dateUtil.getdiffdate(updateTime, '-29d', 'YY-MM-DD');
  				hashs.endDate   = dateUtil.getdate(updateTime, 'YY-MM-DD');
  			}
  			//初始化页码
  			if(!hashs.pageNo || !String(hashs.pageNo).match(/^\d+$/)){
  				hashs.pageNo = '1';
  			}
  			if(!hashs.pageSize || !String(hashs.pageSize).match(/^\d+$/) || _.indexOf(['10','20','30'], String(hashs.pageSize)) === -1){
  				hashs.pageSize = '10';
  			}
  			// 只保存，有效的，正确的参数
  			var require_params  = ['shopId', 'itemId', 'type', 'startDate', 'endDate', 'pageNo', 'pageSize'],
  				oldHashs        = this._status_hashs,
  				hashsChanged    = false;
  			_.each(require_params, function(name, idx){
  				if(oldHashs[name] != hashs[name]){
  					hashsChanged = true;
  					oldHashs[name] = hashs[name];
  				}
  			});
  			if(refresh !== true && hashsChanged === false){
  				afterload && afterload();
  				return;
  			}
  			// cache hashs
  			this._status_hashs = _.extend({},oldHashs);
  			// render 基本结构
  			this._fn_dom_render({_stauts_view: 0});
  
  			// load data then update dom,参数根据api文档修改
  			//加载数据
  			ItemModel.getModel(hashs.itemId).data_item_market_tbk({
  				shopId       : hashs.shopId,
  				itemId   : hashs.itemId,
  				startDate: hashs.startDate,
  				endDate  : hashs.endDate,
  				pageNo   : hashs.pageNo,
  				pageSize : hashs.pageSize
  			}, _.bind(function(data){
  				// console.log("宝贝 淘宝客数据:"+JSON.stringify(data));
  				this._fn_dom_update_list(data, oldHashs, {_minDate: minDate, _maxDate: maxDate});
  				oldHashs = null;
  				minDate  = null;
  				maxDate  = null;
  			},this));
  
  			afterload && afterload();
  		},
  		destroy: function(){
  			if(this.$el){
  				this._fn_event_unbind();
  				this._status_hashs = {};
  				this.$el.empty().remove();
  				this.$el = null;
  			}
  		}
  	};
  	RC.modules.define(mdul.name, mdul);
  })(jQuery,_,RayCloud);

});
